import Head from 'next/head';
import Sidebar from '../partials/Sidebar';
import Header from '../partials/Header';
import Footer from '../partials/Footer';
import Journal from '../journal';
import React, { useState } from 'react';
import { DataProvider } from '../../store/DataContext';
// import { useTheme, useUpdateTheme } from '../../store/ThemeContext';
import { useJournal, useUpdateJournal } from '../../store/JournalContext';
import { useTheme, useUpdateTheme } from '../../store/ThemeContext'

export async function updateDarkMode(id, value) {
  let data = value;
  if (data === '' || data === null) {
    return;
  }

  try {
    const userid = Number(id);
    const res = await fetch(`/api/users/${userid}/updateDarkMode`, {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(data),
    });

    //console.log(res);
  }
  catch (err) {
    console.log(err);
  }
}

export default function Layout({ children, title, background, darkMode, firstName}) {
  const theme = useTheme();
  const setTheme = useUpdateTheme();
  // const [theme, setTheme] = useState(darkMode || 'light');
  const journalOpen = useJournal();
  const toggleJournal = useUpdateJournal();

  const handleTheme = () => {
    const value = theme === 'light' ? 'dark' : 'light';
    setTheme(value);
    updateDarkMode(1, value).catch( (err) => {
      console.log(err);
    });
  }

  return(
    <>
      <Head>
        <title>{title}</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <DataProvider>
        <div className={theme + ' ' + background}>
          <div className='flex h-screen flex-col bg-white text-body dark:text-dark-body {styles.main} '>
            <div className='flex-grow overflow-auto'>
              <div className='flex flex-col order-2 sm:flex-row sm:order-1'>
                <Sidebar
                  darkMode={theme}
                  toggleDarkMode={handleTheme}
                />
                <main
                  id='section-main'
                  className='bg-slate-100 dark:bg-slate-950 relative w-full h-auto min-h-screen sm:ml-[75px]'
                >
                  <div className='flex h-full flex-col p-8 mb-6 bg-white bg-opacity-30 dark:bg-slate-950 dark:bg-opacity-50'>
                    <Header 
                      pageTitle={title}
                      firstName={firstName}
                    />
                    
                      {children}
                    <Footer />
                  </div>
                </main>
              </div>
            </div>
            {journalOpen && (
              <Journal
                onClose={toggleJournal}
              />
            )}
          </div>
        </div>
      </DataProvider>
    </>
  )
}
